<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<!--  name="Send 3GPP Cx/Dx User-Authorization request (UAR)" -->

<scenario>

    <parameter name="[id_msgt]" operation="list.set" value="2029002b000004000a40020004005540048040034e0079400f4000f110000fb4000000f110000051003c0003000005"/>
    <parameter name="[id_msgtd]" operation="protocol.setFromNGAP" value="[id_msgt]" value2="decode"/>
    <parameter name="[id_msgtd1]" operation="protocol.setFromNGAP" value="[id_msgtd]" value2="encode"/>
    <parameter name="[result]" operation="file.create" value="myfile" />
    <parameter name="[result]" operation="file.writestring"  value="myfile" value2="[id_msgtd]"/>
    <parameter name="[result]" operation="file.exists" value="myfile" />
  
    <parameter name="[ue_supi]" operation="set" value="001010000000001" />
    <parameter name="[ue_snn]" operation="set" value="5G:mnc001.mcc001.3gppnetwork.org" />

    <parameter name="[ue_pdu_session_id]" operation="set" value="1" />
    <parameter name="[ue_qos_flow_id]" operation="set" value="1" />
    <parameter name="[ue_gtp_teid]" operation="set"  value="1400000f" />
    <parameter name="[ue_transportLayer_address]" operation="set"  value="11000000101010000001010100011110" />


    <parameter name="[ue_selected_int_alg]" operation="set" value="" />
    <parameter name="[ue_selected_enc_alg]" operation="set" value="" />
    <parameter name="[ue_selected_kNasEnc]" operation="set" value="" />
    <parameter name="[ue_selected_kNasInt]" operation="set" value="" />

    <parameter name="[test_result]" operation="set" value="true"/>  
    <parameter name="[ngap_ch_name]" operation="set" value="channel_client"/>   

    <function file="ngap/NGSetup.xml" />
    <function file="ngap/InitialUEMessage.xml" />
    <function file="ngap/UplinkNASTransport.xml" />
    <function file="ngap/InitialContextSetupResponse.xml" />
    <function file="ngap/UEContextReleaseRequest.xml" />
    <function file="ngap/UEContextReleaseComplete.xml" />

    <function file="function/handleNasPdu.xml" />
    <function file="function/checkAutnCode.xml" />
    <function file="function/encryptNasMessage.xml" />
    <function file="function/handleContextSetup.xml" />
    <function file="function/handleAuthentication.xml" />
    <function file="function/handleIdentity.xml" />
    <function file="function/handleSecurityMode.xml" />
    <function file="function/handlePDUSessionResourceSetup.xml" />
    <function file="function/handlePDUSessionResourceModify.xml" />

    <function file="nas/PDUEstablishRequest.xml" />
    <function file="nas/RegistraionComplete.xml" />
    
    <!-- open a channel -->
    <openChannelNGAP name="[ngap_ch_name]" localHost="[localHostNGAP]" localPort="[localPortNGAP]"
                                 remoteHost="[remoteHostNGAP]" remotePort="[remotePortNGAP]"
                                 transport="[transport]"/>

   
<!--******************* BEGIN NG SETUP ********************-->
    <call name="ngsetup" >
        <output> <parameter name="[function:ngsetup_res]" /> </output>
    </call>

    <if>
        <condition>
            <test parameter="[ngsetup_res]" condition="string.equals" value="false"/>                                              
        </condition>
        <then>
            <parameter name="[test_result]" operation="set" value="false"/>  
            <goto label="final_process"/>   
        </then>     
        <else>
            <log type="Scenario" level="INFO">Received NGSetupResponse</log>
            <goto  name="goto_sendInitUE" label="sendInitUE" state="true"/>    
        </else>
    </if>
    
<!--******************* END NG SETUP ********************-->


<!--******************* BEGIN InitialUEMessage ********************-->
    <label name="sendInitUE"/>    
    <call name="sendInitUeMsg"></call>
    <goto label="handle_ngap_msg"/>  
<!--******************* END InitialUEMessage ********************-->


 
    <label name="handle_ngap_msg"/>  
    <parameter name="[received]" operation="set" value="false"/>        
    <receiveMessageNGAP name="wait_ngap_message" channel="channel_client" timeout="[timeout]" failedOnTimeout="false">
        <parameter name="[messageType]" operation="protocol.setFromMessage" value="message.type"/>
        <parameter name="[messageContent]" operation="protocol.setFromMessage" value="message.xml"/>
        <parameter name="[received]" operation="set" value="true"/> 
    </receiveMessageNGAP>

    <log type="Scenario" level="INFO">Receiving ngap Message : [messageType] [messageContent]</log>

    <if> <condition> <test parameter="[messageContent]" condition="string.contains" value="AMF-UE-NGAP-ID"/> </condition>
        <then>
            <parameter name="[AMF_UE_NGAP_ID]" operation="string.xpath" value="[messageContent]" value2="//AMF-UE-NGAP-ID/text()"/>
            <log type="Scenario" level="INFO">Receiving AMF_UE_NGAP_ID : [AMF_UE_NGAP_ID] </log>
        </then>     
    </if>


<!--******************* BEGIN Handle NGAP Message ********************-->
    <switch parameter="[messageType]">
        <case equals="ErrorIndication">
            <log type="Scenario" level="ERROR">Received unexperted message</log>
            
            <parameter name="[test_result]" operation="set" value="false"/>  
            <goto label="final_process"/>   
        </case>

        <case equals="DownlinkNASTransport">
            <!--******************* BEGIN Handle nas pdu ********************-->
                <if>  <condition> <test parameter="[messageContent]" condition="string.contains" value="NAS-PDU"/></condition>
                    <then>
                        <parameter name="[nas_pdu_msg]" operation="string.xpath" value="[messageContent]" value2="//NAS-PDU"/>
                        <parameter name="[mas_pdu_msg_type]" operation="string.xpath" value="[nas_pdu_msg]" value2="//MessageType"/>
                        <parameter name="[nas_msg_type]" operation="string.xpath" value="[mas_pdu_msg_type(2)]" value2="//MessageType/text()"/>
                                
                        <switch parameter="[nas_msg_type]">
                            <case equals="IdentityRequest">
                                <call name="handleIdentity" >
                                    <input>
                                        <parameter name="[function:nas_pdu_msg]"  value="[nas_pdu_msg]"/>
                                    </input>
                                    <output>
                                        <parameter name="[function:out_ret]" /> 
                                    </output>
                                </call>

                                <if> <condition> <test parameter="[out_ret]" condition="string.equals" value="true"/> </condition>
                                    <then>
                                        <goto label="handle_ngap_msg"/>   
                                    </then>    
                                    <else>
                                        
                                        <parameter name="[test_result]" operation="set" value="false"/>  
                                        <goto label="final_process"/>   
                                    </else> 
                                </if>
                            </case>

                            <case equals="AuthenticationRequest">
                                <call name="handleAuthentication" >
                                    <input>
                                        <parameter name="[function:nas_pdu_msg]"  value="[nas_pdu_msg]"/>
                                    </input>
                                    <output>
                                        <parameter name="[function:out_ret]" /> 
                                        <parameter name="[function:key_seaf]" /> 
                                        <parameter name="[function:key_amf]" /> 
                                        <parameter name="[function:key_ausf]" /> 
                                    </output>
                                </call>

                                <if> <condition> <test parameter="[out_ret]" condition="string.equals" value="true"/> </condition>
                                    <then>
                                        <parameter name="[ue_key_seaf]" operation="set" value="[key_seaf]"/>  
                                        <parameter name="[ue_key_amf]" operation="set" value="[key_amf]"/>  
                                        <parameter name="[ue_key_ausf]" operation="set" value="[key_ausf]"/>  
                                        <goto label="handle_ngap_msg"/>   
                                    </then>    
                                    <else>
                                        <parameter name="[test_result]" operation="set" value="false"/>  
                                        <goto label="final_process"/>   
                                    </else> 
                                </if>
                            </case>

                        <!--******************* start Handle SecurityModeCommand ********************-->
                            <case equals="SecurityModeCommand">
                                <call name="handleSecurityMode" >
                                    <input>
                                        <parameter name="[function:nas_pdu_msg]"  value="[nas_pdu_msg]"/>
                                    </input>
                                    <output>
                                        <parameter name="[function:out_ret]" /> 
                                        <parameter name="[function:selected_kNasEnc]" /> 
                                        <parameter name="[function:selected_kNasInt]" /> 
                                        <parameter name="[function:selected_enc_alg]" /> 
                                        <parameter name="[function:selected_int_alg]" /> 
                                        <parameter name="[function:out_sqn]" />
                                        <parameter name="[function:out_overflow]" />
                                    </output>
                                </call>

                                <if> <condition> <test parameter="[out_ret]" condition="string.equals" value="true"/> </condition>
                                    <then>
                                        <parameter name="[ue_selected_kNasEnc]" operation="set" value="[selected_kNasEnc]"/>  
                                        <parameter name="[ue_selected_kNasInt]" operation="set" value="[selected_kNasInt]"/>  
                                        <parameter name="[ue_selected_int_alg]" operation="set" value="[selected_int_alg]"/>  
                                        <parameter name="[ue_selected_enc_alg]" operation="set" value="[selected_enc_alg]"/>  
                                        <parameter name="[uplinkCount_sqn]" operation="set" value="[out_sqn]"/>  
                                        <parameter name="[uplinkCount_overflow]" operation="set" value="[out_overflow]"/>  
                                        <goto label="handle_ngap_msg"/>   
                                    </then>    
                                    <else>
                                        <parameter name="[test_result]" operation="set" value="false"/>  
                                        <goto label="final_process"/>   
                                    </else> 
                                </if>
                            </case>
                            <default>
                                <goto label="handle_ngap_msg"/>   
                            </default>
                        </switch>    
                        <!--******************* end Handle SecurityModeCommand ********************-->
                        
                    </then>   
                </if>
            <!--******************* END Handle nas pdu ********************-->
        </case>
        <case equals="InitialContextSetupRequest">                  
            <call name="handleContextSetup" >
                <output>
                    <parameter name="[function:out_ret]" /> 
                    <parameter name="[function:out_sqn]" />
                    <parameter name="[function:out_overflow]" />
                </output>
            </call>

            <if> <condition> <test parameter="[out_ret]" condition="string.equals" value="true"/> </condition>
                <then>
                    <parameter name="[uplinkCount_sqn]" operation="set" value="[out_sqn]"/>  
                    <parameter name="[uplinkCount_overflow]" operation="set" value="[out_overflow]"/>  
                    <goto label="handle_ngap_msg"/>   
                </then>    
                <else>
                    <parameter name="[test_result]" operation="set" value="false"/>  
                    <goto label="final_process"/>   
                </else> 
            </if>

            <goto label="handle_ngap_msg"/>               
        </case>
        <case equals="PDUSessionResourceSetupRequest">          
            <call name="handlePDUSessionResourceSetup" >
            </call>
            <goto label="handle_ngap_msg"/>   
        </case>
        <case equals="PDUSessionResourceModifyRequest">          
            <call name="handlePDUSessionResourceModify" >
                <output>
                    <parameter name="[function:out_sqn]" />
                    <parameter name="[function:out_overflow]" />
                </output>
            </call>
            
            <if> <condition> <test parameter="[out_ret]" condition="string.equals" value="true"/> </condition>
                <then>
                    <parameter name="[uplinkCount_sqn]" operation="set" value="[out_sqn]"/>  
                    <parameter name="[uplinkCount_overflow]" operation="set" value="[out_overflow]"/>  
                            
                    <pause name="pause" seconds="1"/>   

                    <call name="releaseRequest" >
                    </call>

                    <goto label="handle_ngap_msg"/>   
                </then>    
                <else>
                    <parameter name="[test_result]" operation="set" value="false"/>  
                    <goto label="final_process"/>   
                </else> 
            </if>


        </case>
        <case equals="UEContextReleaseCommand">  
            <call name="releaseComplete" >
            </call>

            <parameter name="[test_result]" operation="set" value="true"/>  
        </case>
    </switch>    
<!--******************* END Handle NGAP Message ********************-->
  
    <closeChannelSCTP name="[ngap_ch_name]"/> 
    
    <label name="final_process"/>    
    <if> <condition> <test parameter="[test_result]" condition="string.equals" value="true"/> </condition>
        <then>
            <log type="Scenario" level="INFO">Test Successed!!!!!!</log>   
        </then>    
        <else>
        </else> 
    </if>
     

</scenario>
