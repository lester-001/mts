<?xml version="1.0" encoding="UTF-8"?>
<!-- Related XMLSchema file: conf/schemas/scenario.xsd -->
<scenario>
    <function name="countOnEncrypt">
        <input>
        </input>
    
        <do>     
            <parameter name="[count_out_sqn]" operation="set" value="0"/>
            <parameter name="[count_out_overflow]" operation="set" value="0"/>
            <parameter name="[count_out_sqn]" operation="number.add" value="[uplinkCount_sqn]" value2="1"/>

            <if> <condition> <test parameter="[count_out_sqn]" condition="number.greaterequalthan" value="255" /> </condition>
                <then>  
                    <parameter name="[count_out_sqn]" operation="set" value="" value2="0"/>
                </then>   
            </if>
            
            <if> <condition> <test parameter="[count_out_sqn]" condition="number.equals" value="0" /> </condition>
                <then>  
                    <parameter name="[count_out_overflow]" operation="number.add" value="[count_out_overflow]" value2="1"/>
                </then>   
            </if>
        </do>
      
        <output>
            <parameter name="[function:count_out_sqn]" />
            <parameter name="[function:count_out_overflow]" />
        </output>
    </function>

    <function name="EncryptData">
        <input>
        </input>
    
        <do>     
            <if> <condition> <test parameter="[ue_selected_enc_alg]" condition="string.contains" value="ea1"/> </condition>
                <then>  
                </then>   
            </if>

            <if> <condition> <test parameter="[ue_selected_enc_alg]" condition="string.contains" value="ea2"/> </condition>
                <then>   
                </then>   
            </if>
            
            <if> <condition> <test parameter="[ue_selected_enc_alg]" condition="string.contains" value="ea3"/> </condition>
                <then>   
                </then>   
            </if>
        </do>
      
        <output>
        </output>
    </function>

    <function name="ConvertEncAlg">
        <input>
        </input>
    
        <do>     
            <parameter name="[out_enc_alg]" operation="set" value="0"/>
            <if> <condition> <test parameter="[ue_selected_enc_alg]" condition="string.contains" value="ea1"/> </condition>
                <then>  
                    <parameter name="[out_enc_alg]" operation="set" value="1"/>
                </then>   
            </if>

            <if> <condition> <test parameter="[ue_selected_enc_alg]" condition="string.contains" value="ea2"/> </condition>
                <then>   
                    <parameter name="[out_enc_alg]" operation="set" value="2"/>
                </then>   
            </if>
            
            <if> <condition> <test parameter="[ue_selected_enc_alg]" condition="string.contains" value="ea3"/> </condition>
                <then>   
                    <parameter name="[out_enc_alg]" operation="set" value="3"/>
                </then>   
            </if>
        </do>
      
        <output>
            <parameter name="[function:out_enc_alg]" />
        </output>
    </function>


    <function name="ConvertIntAlg">
        <input>
        </input>
    
        <do>     
            <parameter name="[out_int_alg]" operation="set" value="0"/>
            <if> <condition> <test parameter="[ue_selected_int_alg]" condition="string.contains" value="ia1"/> </condition>
                <then>  
                    <parameter name="[out_int_alg]" operation="set" value="1"/>
                </then>   
            </if>

            <if> <condition> <test parameter="[ue_selected_int_alg]" condition="string.contains" value="ia2"/> </condition>
                <then>   
                    <parameter name="[out_int_alg]" operation="set" value="2"/>
                </then>   
            </if>
            
            <if> <condition> <test parameter="[ue_selected_int_alg]" condition="string.contains" value="ia3"/> </condition>
                <then>   
                    <parameter name="[out_int_alg]" operation="set" value="3"/>
                </then>   
            </if>
        </do>
      
        <output>
            <parameter name="[function:out_int_alg]" />
        </output>
    </function>
<!-- ==========================================ComputeMac==============================                                      -->
    <function name="ComputeMac">
        <input>
            <parameter name="[function:plainNasMessage]" />
        </input>
    
        <do> 
            <parameter name="[sqn]" operation="set" value="[uplinkCount_sqn]"/>
            <parameter name="[plainMessage]" operation="string.substring" value="[plainNasMessage]" value2="14"/>
            <parameter name="[binSqn]" operation="number.toBinary" value="[sqn]"/>
            <parameter name="[data]" operation="set" value="[binSqn][plainMessage]"/>
            <parameter name="[data]" operation="binary.tostring" value="[data]"/>

            <parameter name="[bin_ue_selected_kNasInt]" operation="binary.tostring" value="[ue_selected_kNasInt]"/>  

            <if> <condition> <test parameter="[ue_selected_int_alg]" condition="string.contains" value="ia1"/> </condition>
                <then>  
                    <parameter name="[oret]" operation="protocol.setFromNAS" value="[data]" value2="IA1" value3="[bin_ue_selected_kNasInt]" value4="[sqn]" value5="[isUplink]"/>
                </then>   
            </if>

            <if> <condition> <test parameter="[ue_selected_int_alg]" condition="string.contains" value="ia2"/> </condition>
                <then>   
                    <parameter name="[oret]" operation="protocol.setFromNAS" value="[data]" value2="IA2" value3="[bin_ue_selected_kNasInt]" value4="[sqn]" value5="[isUplink]"/>
                </then>   
            </if>
            
            <if> <condition> <test parameter="[ue_selected_int_alg]" condition="string.contains" value="ia3"/> </condition>
                <then>   
                    <parameter name="[oret]" operation="protocol.setFromNAS" value="[data]" value2="IA3" value3="[bin_ue_selected_kNasInt]" value4="[sqn]" value5="[isUplink]"/>
                </then>   
            </if>

            <parameter name="[out_ret]" operation="set" value="true"/>
            <parameter name="[out_mac]" operation="set" value="[oret(0)]"/>
            <parameter name="[out_data]" operation="set" value="[oret(1)]"/>    
        </do>
      
        <output>
            <parameter name="[function:out_ret]" />
            <parameter name="[function:out_mac]" />
        </output>
    </function>

<!-- ========================================== encryptNasMessage ==============================                                      -->
    <function name="encryptNasMessage">
        <input>
            <parameter name="[function:plainNasMessage]" />
        </input>
    
        <do>    
            
            <parameter name="[bypassCiphering]" operation="set" value="0" />

            <if> <condition> <test parameter="[bypassCiphering]" condition="number.equals" value="0" /> </condition>
                <then>  
                    <parameter name="[encryptedData]" operation="set" value="[plainNasMessage]"/>
                </then> 
                <else>
                    <call name="EncryptData" >
                    </call>   

                    <parameter name="[encryptedData]" operation="set" value="[plainNasMessage]"/>
                </else>  
            </if>
              
            <call name="ComputeMac" >
                <input>
                    <parameter name="[function:plainNasMessage]" value="[encryptedData]"/>
                </input>
                <output>
                    <parameter name="[function:out_ret]" />
                    <parameter name="[function:out_mac]" />
                </output>
            </call>   

            <call name="countOnEncrypt" >
                <output>
                    <parameter name="[function:count_out_sqn]" />
                    <parameter name="[function:count_out_overflow]" />
                </output>
            </call>      

            <parameter name="[sqn]" operation="set" value="[uplinkCount_sqn]"/>
            <parameter name="[binSqn]" operation="number.toBinary" value="[sqn]"/>

            <parameter name="[start]" operation="string.substring" value="[plainNasMessage]" value2="0" value3="3"/>
            <parameter name="[end]" operation="string.substring" value="[plainNasMessage]" value2="14"/>
            <parameter name="[data]" operation="set" value="[start][out_mac][binSqn][end]"/>

            <parameter name="[out_encrypt_ret]" operation="set" value="[out_ret]"/>
            <parameter name="[out_encrypt_msg]" operation="set" value="[data]"/>   
            <parameter name="[out_sqn]" operation="set" value="[count_out_sqn]"/>
            <parameter name="[out_overflow]" operation="set" value="[count_out_overflow]"/>   
        </do>
      
        <output>
            <parameter name="[function:out_encrypt_ret]" />
            <parameter name="[function:out_encrypt_msg]" />
            <parameter name="[function:out_sqn]" />
            <parameter name="[function:out_overflow]" />
        </output>
    </function>
</scenario>
